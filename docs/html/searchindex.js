Search.setIndex({"docnames": ["autoapi/index", "autoapi/scenario_assessment/filter/index", "autoapi/scenario_assessment/filter_tools/index", "autoapi/scenario_assessment/index", "index"], "filenames": ["autoapi/index.rst", "autoapi/scenario_assessment/filter/index.rst", "autoapi/scenario_assessment/filter_tools/index.rst", "autoapi/scenario_assessment/index.rst", "index.md"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">scenario_assessment.filter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">scenario_assessment.filter_tools</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">scenario_assessment</span></code>", "\ud83d\udcbb Scenario Assessment Tool for GOBLIN scenarios"], "terms": {"thi": [0, 1, 2, 4], "page": 0, "contain": [0, 1, 2], "auto": 0, "gener": 0, "document": 0, "1": [0, 1], "scenario_assess": [0, 4], "filter": [0, 2, 3, 4], "filter_tool": [0, 3], "creat": 0, "sphinx": 0, "autoapi": 0, "filterresult": [1, 4], "which": [1, 2, 4], "i": [1, 2, 4], "us": [1, 2, 4], "result": [1, 4], "base": [1, 2], "particular": [1, 2], "ga": [1, 2, 4], "reduct": 1, "target": [1, 4], "data_dict": 1, "climate_weight": [1, 2, 4], "none": [1, 2], "ammonia_weight": [1, 2, 4], "eutrophication_weight": [1, 2, 4], "sourc": [1, 2], "A": [1, 2], "specifi": [1, 2, 4], "greenhous": [1, 2], "It": 1, "rank": [1, 4], "scenario": [1, 2], "abil": 1, "meet": [1, 4], "while": 1, "minim": 1, "impact": [1, 2, 4], "livestock": [1, 4], "output": [1, 4], "beef": [1, 2], "milk": [1, 2], "The": [1, 2, 4], "percentag": [1, 2], "achiev": 1, "input": [1, 2], "valu": [1, 2], "between": 1, "0": [1, 2, 4], "type": [1, 2], "float": [1, 2], "subject": 1, "analysi": [1, 2], "e": [1, 2], "g": [1, 2, 4], "ch4": [1, 4], "n2o": 1, "co2": 1, "co2e": 1, "str": [1, 2], "total_gwp_ga": [1, 4], "datafram": 1, "emiss": [1, 2], "each": 1, "compar": 1, "baselin": [1, 4], "total_ammonia_ga": 1, "ammonia": [1, 2], "total_eutroph": 1, "eutroph": [1, 2, 4], "livestock_product": 1, "total": [1, 2, 4], "weight": [1, 2, 4], "appli": 1, "climat": [1, 2, 4], "chang": [1, 2, 4], "overal": [1, 4], "score": [1, 2], "default": [1, 2], "option": [1, 2], "set": [1, 2], "requir": 1, "pass": [1, 4], "string": 1, "search": [1, 2, 4], "them": 1, "accord": [1, 4], "environment": [1, 2, 4], "factor": [1, 2, 4], "return": [1, 2], "nest": 1, "dictionari": [1, 4], "rel": 1, "rais": [1, 2], "valueerror": 1, "If": [1, 2], "sum": [1, 2], "exce": [1, 2], "exampl": 1, "climate_chang": [1, 4], "df_climat": 1, "air_qual": [1, 4], "df_ammonia": 1, "df_eutroph": 1, "protein_output": [1, 4], "df_livestock": 1, "filter_result": 1, "25": 1, "properti": 1, "through": 1, "identifi": [1, 2], "those": 1, "consid": [1, 2], "econom": 1, "product": [1, 2, 4], "evalu": 1, "includ": 1, "both": [1, 2], "convert": 1, "protein": [1, 2, 4], "per": [1, 2], "eu": 1, "commiss": 1, "standard": 1, "addition": 1, "method": [1, 4], "assess": 1, "util": 1, "intern": 1, "attribut": 1, "data": [1, 4], "can": [1, 2, 4], "visual": 1, "rank_chart": 1, "datagraph": 1, "follow": 1, "kei": 1, "": [1, 2], "combin": [1, 2], "cost": [1, 2, 4], "gas_chang": [1, 2], "ammonia_chang": 1, "eutrophication_chang": 1, "production_cost": [1, 2], "total_cost": 1, "dict": 1, "criteria": 1, "target_reduct": 1, "02": [1, 4], "target_ga": 1, "print": [1, 4], "assum": 1, "presenc": 1, "necessari": 1, "respect": 1, "also": [1, 4], "reli": 1, "like": 1, "env_cost_calcul": [1, 2], "production_cost_calcul": [1, 2], "calcul": [1, 2], "associ": [1, 2], "function": 2, "ar": [2, 4], "user": [2, 4], "node": 2, "state": 2, "ammonia_cost": 2, "eutrophication_cost": 2, "repres": 2, "specif": 2, "paramet": [2, 4], "current": 2, "name": 2, "being": 2, "stackfronti": 2, "manag": [2, 4], "frontier": 2, "depth": 2, "first": 2, "algorithm": 2, "list": 2, "object": [2, 4], "yet": 2, "explor": 2, "add": 2, "new": 2, "ad": 2, "contains_st": 2, "check": 2, "ani": 2, "ha": 2, "true": 2, "exist": 2, "fals": 2, "otherwis": 2, "bool": 2, "empti": 2, "delet": 2, "remov": 2, "from": [2, 4], "except": 2, "alreadi": 2, "length": 2, "get": 2, "number": 2, "int": 2, "static": 2, "sc_input": 2, "base_input": 2, "case": 2, "comparison": 2, "metric": 2, "level": 2, "combined_score_calcul": 2, "provid": [2, 4], "custom": 2, "must": 2, "one": 2, "ensur": 2, "balanc": 2, "approach": [2, 4], "absolut": 2, "4": [2, 4], "3": [2, 4], "take": 2, "account": 2, "proteincalc": 2, "milk_protein": 2, "beef_protein": 2, "predefin": 2, "defin": 2, "amount": [2, 4], "gram": 2, "100": 2, "typic": 2, "milk_protein_calcul": 2, "given": 2, "quantiti": 2, "beef_protein_calcul": 2, "modul": 4, "wa": 4, "construct": 4, "ener": 4, "o": 4, "verview": 4, "b": 4, "ackcast": 4, "l": 4, "ivestock": 4, "IN": 4, "tensif": 4, "latest": 4, "iter": 4, "systemat": 4, "produc": 4, "rang": 4, "well": 4, "ouput": 4, "thier": 4, "outout": 4, "sort": 4, "prioritis": 4, "vario": 4, "These": 4, "adjust": 4, "git": 4, "hub": 4, "when": 4, "prompt": 4, "enter": 4, "your": 4, "usernam": 4, "password": 4, "access_token": 4, "repo": 4, "own": 4, "github": 4, "pip": 4, "http": 4, "com": 4, "proj": 4, "main": 4, "class": 4, "In": 4, "addit": 4, "proport": 4, "As": 4, "select": 4, "global": 4, "warm": 4, "import": 4, "panda": 4, "pd": 4, "def": 4, "path": 4, "read_csv": 4, "join": 4, "total_emiss": 4, "csv": 4, "index_col": 4, "eutrophication_tot": 4, "air": 4, "air_quality_tot": 4, "beef_and_milk": 4, "emission_dict": 4, "filter_class": 4, "search_result": 4, "__name__": 4, "__main__": 4, "project": 4, "under": 4, "term": 4, "mit": 4}, "objects": {"": [[3, 0, 0, "-", "scenario_assessment"]], "scenario_assessment": [[1, 0, 0, "-", "filter"], [2, 0, 0, "-", "filter_tools"]], "scenario_assessment.filter": [[1, 1, 1, "", "FilterResults"]], "scenario_assessment.filter.FilterResults": [[1, 2, 1, "", "ammonia_weight"], [1, 2, 1, "", "climate_weight"], [1, 2, 1, "", "eutrophication_weight"], [1, 3, 1, "id1", "gas"], [1, 2, 1, "", "livestock_products"], [1, 4, 1, "", "search"], [1, 3, 1, "id0", "target"], [1, 2, 1, "", "total_ammonia_gas"], [1, 2, 1, "", "total_eutrophication"], [1, 2, 1, "", "total_gwp_gas"]], "scenario_assessment.filter_tools": [[2, 1, 1, "", "Node"], [2, 1, 1, "", "ProteinCalc"], [2, 1, 1, "", "StackFrontier"]], "scenario_assessment.filter_tools.ProteinCalc": [[2, 2, 1, "", "beef_protein"], [2, 4, 1, "", "beef_protein_calculator"], [2, 2, 1, "", "milk_protein"], [2, 4, 1, "", "milk_protein_calculator"]], "scenario_assessment.filter_tools.StackFrontier": [[2, 4, 1, "", "add"], [2, 4, 1, "", "combined_score_calculation"], [2, 4, 1, "", "contains_state"], [2, 4, 1, "", "delete"], [2, 4, 1, "", "empty"], [2, 4, 1, "", "env_cost_calculation"], [2, 2, 1, "", "frontier"], [2, 4, 1, "", "length"], [2, 4, 1, "", "production_cost_calculation"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"]}, "titleterms": {"api": 0, "refer": 0, "scenario_assess": [1, 2, 3], "filter": 1, "modul": [1, 2], "content": [1, 2], "class": [1, 2], "filter_tool": 2, "submodul": 3, "scenario": 4, "assess": 4, "tool": 4, "goblin": 4, "instal": 4, "usag": 4, "licens": 4}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "scenario_assessment.filter": [[1, "module-scenario_assessment.filter"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"]], "Classes": [[1, "classes"], [2, "classes"]], "scenario_assessment.filter_tools": [[2, "module-scenario_assessment.filter_tools"]], "scenario_assessment": [[3, "module-scenario_assessment"]], "Submodules": [[3, "submodules"]], "\ud83d\udcbb Scenario Assessment Tool for GOBLIN scenarios": [[4, "scenario-assessment-tool-for-goblin-scenarios"]], "Installation": [[4, "installation"]], "Usage": [[4, "usage"]], "License": [[4, "license"]]}, "indexentries": {"filterresults (class in scenario_assessment.filter)": [[1, "scenario_assessment.filter.FilterResults"]], "ammonia_weight (scenario_assessment.filter.filterresults attribute)": [[1, "scenario_assessment.filter.FilterResults.ammonia_weight"]], "climate_weight (scenario_assessment.filter.filterresults attribute)": [[1, "scenario_assessment.filter.FilterResults.climate_weight"]], "eutrophication_weight (scenario_assessment.filter.filterresults attribute)": [[1, "scenario_assessment.filter.FilterResults.eutrophication_weight"]], "gas (scenario_assessment.filter.filterresults attribute)": [[1, "scenario_assessment.filter.FilterResults.gas"]], "gas (scenario_assessment.filter.filterresults property)": [[1, "id1"]], "livestock_products (scenario_assessment.filter.filterresults attribute)": [[1, "scenario_assessment.filter.FilterResults.livestock_products"]], "module": [[1, "module-scenario_assessment.filter"], [2, "module-scenario_assessment.filter_tools"], [3, "module-scenario_assessment"]], "scenario_assessment.filter": [[1, "module-scenario_assessment.filter"]], "search() (scenario_assessment.filter.filterresults method)": [[1, "scenario_assessment.filter.FilterResults.search"]], "target (scenario_assessment.filter.filterresults attribute)": [[1, "scenario_assessment.filter.FilterResults.target"]], "target (scenario_assessment.filter.filterresults property)": [[1, "id0"]], "total_ammonia_gas (scenario_assessment.filter.filterresults attribute)": [[1, "scenario_assessment.filter.FilterResults.total_ammonia_gas"]], "total_eutrophication (scenario_assessment.filter.filterresults attribute)": [[1, "scenario_assessment.filter.FilterResults.total_eutrophication"]], "total_gwp_gas (scenario_assessment.filter.filterresults attribute)": [[1, "scenario_assessment.filter.FilterResults.total_gwp_gas"]], "node (class in scenario_assessment.filter_tools)": [[2, "scenario_assessment.filter_tools.Node"]], "proteincalc (class in scenario_assessment.filter_tools)": [[2, "scenario_assessment.filter_tools.ProteinCalc"]], "stackfrontier (class in scenario_assessment.filter_tools)": [[2, "scenario_assessment.filter_tools.StackFrontier"]], "add() (scenario_assessment.filter_tools.stackfrontier method)": [[2, "scenario_assessment.filter_tools.StackFrontier.add"]], "beef_protein (scenario_assessment.filter_tools.proteincalc attribute)": [[2, "scenario_assessment.filter_tools.ProteinCalc.beef_protein"]], "beef_protein_calculator() (scenario_assessment.filter_tools.proteincalc method)": [[2, "scenario_assessment.filter_tools.ProteinCalc.beef_protein_calculator"]], "combined_score_calculation() (scenario_assessment.filter_tools.stackfrontier static method)": [[2, "scenario_assessment.filter_tools.StackFrontier.combined_score_calculation"]], "contains_state() (scenario_assessment.filter_tools.stackfrontier method)": [[2, "scenario_assessment.filter_tools.StackFrontier.contains_state"]], "delete() (scenario_assessment.filter_tools.stackfrontier method)": [[2, "scenario_assessment.filter_tools.StackFrontier.delete"]], "empty() (scenario_assessment.filter_tools.stackfrontier method)": [[2, "scenario_assessment.filter_tools.StackFrontier.empty"]], "env_cost_calculation() (scenario_assessment.filter_tools.stackfrontier static method)": [[2, "scenario_assessment.filter_tools.StackFrontier.env_cost_calculation"]], "frontier (scenario_assessment.filter_tools.stackfrontier attribute)": [[2, "scenario_assessment.filter_tools.StackFrontier.frontier"]], "length() (scenario_assessment.filter_tools.stackfrontier method)": [[2, "scenario_assessment.filter_tools.StackFrontier.length"]], "milk_protein (scenario_assessment.filter_tools.proteincalc attribute)": [[2, "scenario_assessment.filter_tools.ProteinCalc.milk_protein"]], "milk_protein_calculator() (scenario_assessment.filter_tools.proteincalc method)": [[2, "scenario_assessment.filter_tools.ProteinCalc.milk_protein_calculator"]], "production_cost_calculation() (scenario_assessment.filter_tools.stackfrontier static method)": [[2, "scenario_assessment.filter_tools.StackFrontier.production_cost_calculation"]], "scenario_assessment.filter_tools": [[2, "module-scenario_assessment.filter_tools"]], "scenario_assessment": [[3, "module-scenario_assessment"]]}})